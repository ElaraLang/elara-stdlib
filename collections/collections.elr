namespace elara/std

let forEach(Any[] col, (Any) => Unit fun) => {
	forEachIndexed(col, (Int index, Any value) => {
		fun(value)
	})
}

let forEachIndexed(Any[] col, (Int, Any) => Unit fun) => {
    loopIndexed(col.size, (Int index) => {
        fun(index, col[index])
    })
}

let toString(Any[] col) => {
	return "[" + col.join(", ") + "]"
}

let map(Any[] col, (Any) => Any mapper) => {
	if col.size == 0 {
		return col
	}
	return mapRec(col, 0, empty(), mapper)
}

let mapRec(Any[] col, Int index, Any[] acc, (Any) => Any mapper) => {
	if index == col.size {
		return empty()
	}
	let mappedElem = mapper(col[index])
	return acc + [mappedElem] + mapRec(col, index + 1, acc, mapper)
}